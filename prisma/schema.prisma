datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  
}
generator client {
  provider = "prisma-client-js"
}

model Resume {
  id           String   @id @default(uuid())  // Unique identifier for the resume
  userEmail    String   // Email address of the user who uploaded the resume
  fileUrl      String   // URL of the uploaded resume file (stored on Supabase or AWS S3)
  extractedText String  // Text extracted from the resume using AWS Textract or other methods
  feedback     String?  // AI-generated feedback for resume improvement
  matchScore   Int?     // Score based on the match with a job description
  createdAt    DateTime @default(now()) // Timestamp for when the resume was uploaded

  // Relations
  resumeJobMatches ResumeJobMatch[]
}

model JobDescription {
  id          String   @id @default(uuid())  // Unique identifier for the job description
  title       String   // Title of the job (e.g., "Software Engineer")
  description String   // Full job description
  createdAt   DateTime @default(now()) // Timestamp for when the job description was created

  // Relations
  resumeJobMatches ResumeJobMatch[]
}

model ResumeJobMatch {
  id           String   @id @default(uuid())  // Unique identifier for the job match
  resumeId     String   // Foreign key referencing the resume
  jobDescriptionId String // Foreign key referencing the job description
  matchScore   Int      // Match score between the resume and the job description
  createdAt    DateTime @default(now()) // Timestamp for when the match was created

  // Relations
  resume       Resume   @relation(fields: [resumeId], references: [id])
  jobDescription JobDescription @relation(fields: [jobDescriptionId], references: [id])
}
